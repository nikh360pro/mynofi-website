# Build with Vite for proper Supabase integration
[build]
  publish = "dist"
  command = "npm run build:prod"

# Environment variables for Supabase (REQUIRED for WebSocket connections)
[build.environment]
  VITE_SUPABASE_URL = "https://mizniptrapkrykarqaha.supabase.co"
  VITE_SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1pem5pcHRyYXBrcnlrYXJxYWhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkwMTc2MzUsImV4cCI6MjA2NDU5MzYzNX0.A6xmnfudPmPfnxeidJFQbJYRb96u06sDEQ0AdBpXz8s"
  NODE_ENV = "production"

# SPA routing - redirects any path to index.html so React Router can handle routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# AGGRESSIVE CACHE INVALIDATION for HTML files (DEPLOYMENT FIX)
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache" 
    Expires = "0"
    ETag = "W/\"no-cache\""

# AGGRESSIVE CACHE INVALIDATION for root index.html (DEPLOYMENT FIX)
[[headers]]
  for = "/index.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    ETag = "W/\"no-cache\""

# Security headers for enhanced protection (UPDATED for Supabase WebSocket support)
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    # Enhanced CSP for Supabase WebSocket connections and real-time features
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.supabase.co https://cdn.gpteng.co; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; connect-src 'self' https://*.supabase.co wss://*.supabase.co wss://mizniptrapkrykarqaha.supabase.co https://fonts.googleapis.com https://fonts.gstatic.com; font-src 'self' data: https://fonts.gstatic.com; worker-src 'self' blob:; child-src 'self' blob:; frame-src 'self'; object-src 'none'; base-uri 'self';"

# Cache versioned assets with strong ETags
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    ETag = "W/\"versioned\""

# API routes caching with revalidation
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "public, max-age=3600, must-revalidate"

# Font files caching optimization
[[headers]]
  for = "/*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Service worker cache control
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate" 